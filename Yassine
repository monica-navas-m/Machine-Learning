import pandas as pd
from sklearn.cluster import KMeans

file_path = r'C:\Users\yassine\Desktop\Nova SBE\machine learning\group project\covtype_data.csv'

# Load the data into a pandas dataframe
df = pd.read_csv(file_path)
# Define column names
col_names = ['Elevation', 'Aspect', 'Slope', 'H_Distance_Hydro', 'V_Distance_Hydro',
             'H_Distance_Roadways', 'Hillshade_9am', 'Hillshade_Noon', 'Hillshade_3pm',
             'H_Distance_Fire_Points']

# Generate names for binary columns based on their position
binary_col_names = [f"Wilderness_Area_{i+1}" for i in range(4)]
binary_col_names += [f"Soil_Type_{i+1}" for i in range(40)]

# Append the binary column names to the list of column names
col_names += binary_col_names

# Append the target variable name to the list of column names
col_names.append('Cover_Type')

# Rename the columns in the DataFrame
df.columns = col_names

# Select the soil type features only
X = df.iloc[:, 14:54]

# Choose the number of clusters
num_clusters = 10

# Create a K-means clustering object
kmeans = KMeans(n_clusters=num_clusters, random_state=0)

# Fit the clustering object to the data
kmeans.fit(X)

# Get the cluster labels for each soil type
cluster_labels = kmeans.labels_

# Add the cluster labels to the original dataset
df['Cluster_Labels'] = cluster_labels

# Evaluate the performance of the clustering algorithm using silhouette score
from sklearn.metrics import silhouette_score
silhouette_avg = silhouette_score(X, cluster_labels)
print("The average silhouette_score is :", silhouette_avg)

# Visualize the results using scatter plot
import matplotlib.pyplot as plt
plt.scatter(X.iloc[:,0], X.iloc[:,1], c=cluster_labels)
plt.xlabel('Soil Type Feature 1')
plt.ylabel('Soil Type Feature 2')
plt.show()
